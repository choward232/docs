openapi: "3.0.0"
info:
    version: "1.0.0"
    title: "Ekho Dealer External API Schema"
    description: Objects and endpoints that are made accessible to external clients
servers:
    - url: https://api.ekhodealer.com
      description: Production server
    - url: https://api-sandbox.ekhodealer.com
      description: Dev server
paths:
    /checkoutCart_oncreate_v2/:
        post:
            summary: Create a checkout cart
            description: This endpoint is used to determine whether or not we can facilitate a sale for a user (based on selected registration/titling state and cart items), and if so, to create a checkout cart for them. If we can't facilitate a sale, we will redirect the user to the OEMs native checkout page. If we can facilitate a sale, we will redirect the user to the OEM's Ekho Dealer Checkout page.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/IncomingCheckoutCart"
            responses:
                "200":
                    description: Successfully processed the checkout cart. Returns the checkoutUrl to redirect the user to to complete the checkout process. Can either be the OEMs native checkout page or our own checkout page, depending on whether or not Ekho is "turned on" in state the user wants to title their vehicle in AND whether or not there is at least 1 vehicle among the items
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    checkoutUrl:
                                        type: string
                                        description: The url to redirect the user to to complete the checkout process. If we're checking the buyer out via Ekho Dealer's checkout out, this url will whatever we were sent as the `nativeDefaultCheckoutUrl` in the request body.
                                    ekhoCheckoutCartId:
                                        type: string
                                        description: The id of the checkout cart we created. This will be null if we aren't redirecting the buyer to Ekho Dealer's checkout page.
                                    message:
                                        type: string
                                        description: A human readable message describing why we're redirecting the buyer to the checkoutUrl we return
                "400":
                    description: Bad request, typically due to missing or incorrect parameters
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: A human readable message describing why the request was bad
                "500":
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: A human readable message describing why the request was bad
    /checkoutCart_oncreate_v2/:legacy:
        x-alias: /checkoutCart_oncreate_v2/
        post:
            summary: Create a checkout cart (legacy)
            description: This endpoint is an alias for /checkoutCart_oncreate_v2/ and maps to the same underlying implementation. This endpoint is used to determine whether or not we can facilitate a sale for a user (based on selected registration/titling state and cart items), and if so, to create a checkout cart for them. If we can't facilitate a sale, we will redirect the user to the OEMs native checkout page. If we can facilitate a sale, we will redirect the user to the OEM's Ekho Dealer Checkout page.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LegacyIncomingCheckoutCart"
            responses:
                "200":
                    description: Successfully processed the checkout cart. Returns the checkoutUrl to redirect the user to to complete the checkout process. Can either be the OEMs native checkout page or our own checkout page, depending on whether or not Ekho is "turned on" in state the user wants to title their vehicle in AND whether or not there is at least 1 vehicle among the items
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    checkoutUrl:
                                        type: string
                                        description: The url to redirect the user to to complete the checkout process. If we're checking the buyer out via Ekho Dealer's checkout out, this url will whatever we were sent as the `nativeDefaultCheckoutUrl` in the request body.
                                    ekhoCheckoutCartId:
                                        type: string
                                        description: The id of the checkout cart we created. This will be null if we aren't redirecting the buyer to Ekho Dealer's checkout page.
                                    message:
                                        type: string
                                        description: A human readable message describing why we're redirecting the buyer to the checkoutUrl we return
                "400":
                    description: Bad request, typically due to missing or incorrect parameters
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: A human readable message describing why the request was bad
                "500":
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: A human readable message describing why the request was bad
    /purchasedVehicle_oncreate_v2/{purchasedVehicleId}/vin:
        post:
            summary: Assign VIN to a vehicle
            description: Assign VIN and update necessary details in the database after verifying OEM key and admin authentication.
            parameters:
                - in: path
                  name: purchasedVehicleId
                  required: true
                  schema:
                      type: string
                  description: The ID of the purchased vehicle to which the VIN will be assigned.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                oemKey:
                                    type: string
                                    description: Key to identify and authenticate the OEM admin.
                                vin:
                                    type: string
                                    description: The Vehicle Identification Number to be assigned to the purchased vehicle.
            responses:
                "200":
                    description: VIN successfully assigned to the purchased vehicle.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    vin:
                                        type: string
                                        description: The VIN that was assigned to the purchased vehicle.
                "400":
                    description: Bad request due to missing parameters or invalid VIN length.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Details the reason for the request failure, such as missing parameters or validation errors on the VIN.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error when trying to assign the VIN.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []
    /purchasedVehicle_oncreate_v2/{purchasedVehicleId}/motorcycleEngineNumber:
        post:
            summary: Assign motorcycle engine number to a vehicle
            description: Assign motorcycle engine number and update necessary details in the database after verifying OEM key and admin authentication.
            parameters:
                - in: path
                  name: purchasedVehicleId
                  required: true
                  schema:
                      type: string
                  description: The ID of the purchased vehicle to which the motorcycle engine number will be assigned.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                oemKey:
                                    type: string
                                    description: Key to identify and authenticate the OEM admin.
                                motorcycleEngineNumber:
                                    type: string
                                    description: The Motorcycle Enginer Number associated with the purchased vehicle.
            responses:
                "200":
                    description: Motorcycle engine number successfully assigned to the purchased vehicle.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    motorcycleEngineNumber:
                                        type: string
                                        description: The motorcycle engine number that was assigned to the purchased vehicle.
                "400":
                    description: Bad request due to missing parameters or invalid motorcycle engine number length.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Details the reason for the request failure, such as missing parameters or validation errors.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error when trying to assign the motorcycle engine number.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []
    /purchasedVehicle_oncreate_v2/{purchasedVehicleId}/odometerReading:
        post:
            summary: Assign odometer reading to a vehicle
            description: Assign odometer reading and update necessary details in the database after verifying OEM key and admin authentication.
            parameters:
                - in: path
                  name: purchasedVehicleId
                  required: true
                  schema:
                      type: string
                  description: The ID of the purchased vehicle to which the odometer reading will be assigned.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                oemKey:
                                    type: string
                                    description: Key to identify and authenticate the OEM admin.
                                odometerReading:
                                    type: string
                                    description: The odometer reading to be assigned to the purchased vehicle.
            responses:
                "200":
                    description: Odometer reading successfully assigned to the purchased vehicle.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    odometerReading:
                                        type: string
                                        description: The odometer reading that was assigned to the purchased vehicle.
                "400":
                    description: Bad request due to missing parameters or invalid odometer reading length.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Details the reason for the request failure, such as missing parameters or validation errors.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error when trying to assign the odometer reading.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []
    /purchasedVehicle_oncreate_v2/{purchasedVehicleId}/vehicleFulfillmentStatus:
        post:
            summary: Update fulfillment status of a vehicle
            description: Update fulfillment status and update necessary details in the database after verifying OEM key and admin authentication.
            parameters:
                - in: path
                  name: purchasedVehicleId
                  required: true
                  schema:
                      type: string
                  description: The ID of the purchased vehicle where the fulfillment status will be updated.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - oemKey
                                - vehicleFulfillmentStatus
                            properties:
                                oemKey:
                                    type: string
                                    description: Key to identify and authenticate the OEM admin.
                                vehicleFulfillmentStatus:
                                    type: string
                                    description: The fulfillment status to be assigned to the vehicle.
                                    enum:
                                        - UNFULFILLED
                                        - ON_HOLD
                                        - CANCELED
                                        - FULFILLMENT_REQUESTED
                                        - FULFILLED
                                        - SHIPPED
                                        - READY_FOR_PICK_UP
                                fulfillmentDetails:
                                    type: object
                                    description: Optional. Additional details about the fulfillment - only relevant when vehicleFulfillmentStatus is "SHIPPED".
                                    properties:
                                        vehicleTrackingReference:
                                            type: string
                                            description: Optional. Tracking number or link.
                                        companyName:
                                            type: string
                                            description: Optional. The name of the company that is fulfilling the vehicle.
                                        contactNumber:
                                            type: string
                                            description: Optional. The contact number of the company that is fulfilling the vehicle.
                                estimatedDeliveryDate:
                                    type: string
                                    description: Optional. Updated estimated delivery date of the vehicle. Relevant when vehicleFulfillmentStatus is "SHIPPED" or "READY_FOR_PICK_UP".
            responses:
                "200":
                    description: Fulfillment status successfully updated on the purchased vehicle.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    vehicleFulfillmentStatus:
                                        type: string
                                        description: The updated fulfillment status set on the purchased vehicle.
                "400":
                    description: Bad request due to missing parameters or invalid fulfillment status.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Details the reason for the request failure, such as missing parameters or validation errors.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error when trying to update the fulfillment status.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []
    /oem_onauth_v2/token:
        post:
            summary: Fetch OEM bearer token
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                oemKey:
                                    type: string
                                    description: Key to identify and authenticate the OEM admin.
                                username:
                                    type: string
                                    description: Username of the admin account.
                                password:
                                    type: string
                                    description: Password of the admin account.
            responses:
                "200":
                    description: Successfully authenticated and fetched access token.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    accessToken:
                                        type: string
                                        description: The access token for authenticated requests.
                                    expiryTime:
                                        type: integer
                                        description: The expiration time of the token formatted as a Unix timestamp (milliseconds since Unix epoch).
                "400":
                    description: Bad request due to missing parameters or invalid user credentials.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Details the reason for the request failure, such as missing parameters or invalid credentials.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "403":
                    description: Forbidden request due to invalid account type or access denied.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why access was denied.
                "500":
                    description: Server error when trying to authenticate the admin account.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
    /oem_oncreate_v2/pickUpLocation:
        post:
            summary: Add a new pickup location
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - oemKey
                                - pickUpLocation
                            properties:
                                oemKey:
                                    type: string
                                pickUpLocation:
                                    $ref: "#/components/schemas/PickUpLocation"
            responses:
                "200":
                    description: Successfully added the pickup location.
                "400":
                    description: Bad Request. Possible reasons include missing parameters or invalid data.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: "No oemId found for the given oemKey: {oemKey}"
                "401":
                    description: Unauthorized. Authentication failed.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: "Authentication failed"
            security:
                - oemAdminAuth: []
            x-code-samples:
                - lang: cURL
                  source: |
                      curl -X POST "https://us-central1-airdealer-67669.cloudfunctions.net/oem_oncreate_v2/pickUpLocation" \
                      -H "Content-Type: application/json" \
                      -H "Authorization: Bearer YOUR_TOKEN" \
                      -d '{
                          "oemKey": "exampleOemKey",
                          "pickUpLocation": {
                              "id": "exampleLocationId",
                              "otherProperty": "value"
                          }
                      }'
    /subscription_oncreate_v2/:
        post:
            summary: Subscribe to a webhook event
            description: Subscribe a URL to a particular webhook event, only allowed after verifying authentication.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                oemKey:
                                    type: string
                                    description: Key to identify and authenticate the OEM admin.
                                brandKey:
                                    type: string
                                    description: The brand key of the OEM.
                                targetUrl:
                                    type: string
                                    description: The URL to which the webhook event will be sent.
                                actionName:
                                    type: string
                                    description: The name of the action to subscribe to. Whenever a subscribed to action is performed, a webhook event will be sent to the target URL.
                                    enum:
                                        - placedOrder # Event when a new order is placed
                                        - purchasedVehicle # Event when a vehicle is purchased
                                        - purchasedAccessory # Event when an accessory is purchased
                                        - vehiclePaymentStatus # Event when the payment status of a vehicle changes
                                        - vehicleFulfillmentStatus # Event when the fulfillment status of a vehicle changes
                                        - vehicleStage # Event when the stage of a vehicle changes
                                        - surveyComplete # Event when a survey is completed
                                        - preorder # Event when a preorder is placed
            responses:
                "201":
                    description: Successfully subscribed a URL to a specified webhook event.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: string
                                        description: Success message
                "400":
                    description: Bad request due to missing parameters.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Details the reason for the request failure, such as missing parameters or validation errors.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error when trying to subscribe to a webhook event.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []
    /subscription_ondelete_v2/:
        delete:
            summary: Delete existing subscription to a webhook event
            description: Delete subscription to a particular webhook event, only allowed after verifying authentication.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                oemKey:
                                    type: string
                                    description: Key to identify and authenticate the OEM admin.
                                brandKey:
                                    type: string
                                    description: The brand key of the OEM.
                                subscriptionId:
                                    type: string
                                    description: The ID of the subscription to be deleted.
            responses:
                "200":
                    description: Successfully deleted the subscription to a webhook event.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: string
                                        description: Success message
                "400":
                    description: Bad request due to missing parameters or other error.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Details the reason for the request failure, such as missing parameters or validation errors.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error when trying to delete a subscription.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []
    /purchasedVehicle_onfetch_v2/{purchasedVehicleId}:
        get:
            summary: Retrieve details of a purchased vehicle
            description: Retrieves details of a purchased vehicle based on the specified purchasedVehicleId. Requires authentication.
            parameters:
                - in: path
                  name: purchasedVehicleId
                  required: true
                  schema:
                      type: string
                  description: Unique identifier of the purchased vehicle to retrieve.
                - in: query
                  name: oemKey
                  required: true
                  schema:
                      type: string
                  description: Key to identify and authenticate the OEM admin.
            responses:
                "200":
                    description: Successfully retrieved the purchased vehicle details.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalPurchasedVehicle"
                "400":
                    description: Bad request due to missing parameters, such as a missing OEM key.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Message indicating the missing or invalid parameter.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error encountered when attempting to retrieve the purchased vehicle details.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []
    /purchasedAccessory_onfetch_v2/{purchasedAccessoryId}:
        get:
            summary: Retrieve details of a purchased accessory
            description: Retrieves details of a purchased accessory based on the specified purchasedAccessoryId. Requires authentication.
            parameters:
                - in: path
                  name: purchasedAccessoryId
                  required: true
                  schema:
                      type: string
                  description: Unique identifier of the purchased accessory to retrieve.
                - in: query
                  name: oemKey
                  required: true
                  schema:
                      type: string
                  description: Key to identify and authenticate the OEM admin.
            responses:
                "200":
                    description: Successfully retrieved the purchased accessory details.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalPurchasedAccessory"
                "400":
                    description: Bad request due to missing parameters, such as a missing OEM key.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Message indicating the missing or invalid parameter.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error encountered when attempting to retrieve the purchased accessory details.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []
    /preorder/{preorderId}:
        get:
            summary: Retrieve details of a preorder
            description: Retrieves details of a preorder based on the specified preorderId. Requires authentication.
            parameters:
                - in: path
                  name: preorderId
                  required: true
                  schema:
                      type: string
                  description: Unique identifier of the preorder to retrieve.
                - in: query
                  name: oemKey
                  required: true
                  schema:
                      type: string
                  description: Key to identify and authenticate the OEM admin.
            responses:
                "200":
                    description: Successfully retrieved the preorder details.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalPreorder"
                "400":
                    description: Bad request due to missing parameters, such as a missing OEM key.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Message indicating the missing or invalid parameter.
                "401":
                    description: Unauthorized request due to failed authentication.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Explanation of why authentication failed.
                "500":
                    description: Server error encountered when attempting to retrieve the purchased accessory details.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        description: Detailed message of the server error encountered during the process.
            security:
                - oemAdminAuth: []

components:
    schemas:
        IncomingCheckoutCart:
            type: "object"
            properties:
                id:
                    type: "string"
                    description: "The id of the checkout cart. If an ID is included, then we will use this ID for the newly created checkout cart (and overwrite any existing cart with the same ID)"
                cancelUrl:
                    type: "string"
                    description: "The url to redirect to if the user cancels the checkout process"
                cartVehicle:
                    type: "object"
                    properties:
                        productId:
                            type: "string"
                    required:
                        - "productId"
                    additionalProperties: false
                    description: "An object representing the vehicle model in the cart. Per cart, there can only be one vehicle model represented. Specifically, you cannot have two vehicles with different product IDs in the cart."
                oemKey:
                    type: "string"
                    description: "The oemKey of the OEM that this checkout cart belongs to"
                variantConfigIds:
                    type: "array"
                    items:
                        type: "string"
                    description: "An array representing the configured vehicles in the cart. Every distinct vehicle configuration will have its own Variant ID (but the same product ID). Add multiple vehicles to a cart by inserting multiple Variant IDs."
                oemId:
                    type: "string"
                    description: "The oemId of the OEM that this checkout cart belongs to (optional -- if not provided we will grab need to default to the main oemId)"
                nativeDefaultCheckoutUrl:
                    type: "string"
                    description: "The OEMs native checkout page URL, which we will route the buyer to if a) the buyer doesn't have vehicles in their cart, or b) we don't support the state they want to register their vehicle in (if included). \nExample: https://www.rideoem.com/checkout"
                registrationState:
                    type: "string"
                    enum:
                        - "AL"
                        - "AK"
                        - "AZ"
                        - "AR"
                        - "CA"
                        - "CO"
                        - "CT"
                        - "DE"
                        - "FL"
                        - "GA"
                        - "HI"
                        - "ID"
                        - "IL"
                        - "IN"
                        - "IA"
                        - "KS"
                        - "KY"
                        - "LA"
                        - "ME"
                        - "MD"
                        - "MA"
                        - "MI"
                        - "MN"
                        - "MS"
                        - "MO"
                        - "MT"
                        - "NE"
                        - "NV"
                        - "NH"
                        - "NJ"
                        - "NM"
                        - "NY"
                        - "NC"
                        - "ND"
                        - "OH"
                        - "OK"
                        - "OR"
                        - "PA"
                        - "RI"
                        - "SC"
                        - "SD"
                        - "TN"
                        - "TX"
                        - "UT"
                        - "VT"
                        - "VA"
                        - "WA"
                        - "WV"
                        - "WI"
                        - "WY"
                    description: "The state (abbreviation) the buyer wants to register their vehicle in. Helps us determine whether or not we can facilitate this sale"
                items:
                    type: "array"
                    items:
                        type: "object"
                        properties:
                            productId:
                                type: "string"
                                description: "The product id of the item"
                            count:
                                type: "number"
                                description: "The quantity of the item (only relevant if the item is an accessory)"
                            name:
                                type: "string"
                                description: "The name of the item"
                            basePrice:
                                type: "number"
                                description: "The base price of the item (i.e. total price, excluding specs and taxes and fees)"
                            imgUrl:
                                type: "string"
                                description: "The url of the image of the item. If we have our own (i.e. for a vehicle), we will provide our own."
                            specs:
                                type: "array"
                                items:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            description: "The name of the spec"
                                        price:
                                            type: "number"
                                            description: "The price of the spec"
                                        option:
                                            type: "string"
                                            description: "The option of the spec"
                                        description:
                                            type: "string"
                                            description: "The description of the spec. Allows for a longer string and shows up in a tooltip on the frontend"
                                        id:
                                            type: "string"
                                            description: "The id of the spec. Never used by Ekho, but could be useful for OEMs"
                                    required:
                                        - "name"
                                        - "price"
                                        - "option"
                                    additionalProperties: false
                                    description: "An array of objects that hold information about each spec of the item"
                                description: "An array of objects that hold information about each spec of the item"
                            estimatedProductionTime:
                                type: "number"
                                description: "The estimated production time (in days) of the vehicle, inclusive of production, shipping to US location, customs, PDI, etc. If specified, this will override the average production time of the vehicle from the Vehicle object"
                            estimatedDeliveryTime:
                                type: "number"
                                description: "The estimated delivery time (in days) of the vehicle from US location to end destination. If specified, this will override the average delivery time of the vehicle from the Vehicle object"
                            year:
                                type: "number"
                                description: "The year of the vehicle model. Only relevant for vehicle items. Will override the year that's in the vehicle subcollection object"
                            id:
                                type: "string"
                                description: "The id of the item. Will be used at order creation time as the document ID of the purchasedItem. Will only be set if the cart was created via the OEM portal"
                            color:
                                type: "string"
                                description: "The color of the vehicle"
                            totalPrice:
                                type: "number"
                                description: "The total price of the item (i.e. base price + specs). Only sometimes included when created from OEM admin portal"
                            boltOnAccessories:
                                type: "array"
                                items:
                                    type: "string"
                                description: "An array with the document IDs of boltOn purchasedAccessories that have been assigned to this vehicle. Will only be set if the cart was created via the OEM portal"
                            boltOnVehicleIds:
                                type: "array"
                                items:
                                    type: "string"
                                description: "An array with the document IDs of purchasedVehicles that this bolt-on has been assigned to. Will only be set if the cart was created via the OEM portal"
                            typeOfOrder:
                                type: "string"
                                enum:
                                    - "ante_preorder"
                                    - "preorder"
                                    - "buildToOrder"
                                    - "inventoryOrder"
                                description: "The type of order of the vehicle"
                            variantId:
                                type: "string"
                                description: "The variant id of the vehicle"
                            description:
                                type: "string"
                                description: "The description of the vehicle"
                            sku:
                                type: "string"
                                description: "Optional. The sku of the vehicle"
                            stage:
                                type: "string"
                                enum:
                                    - "signOff"
                                    - "pendingPaymentGuarantee"
                                    - "pendingVerification"
                                    - "production"
                                    - "complete"
                                description: "Optional. The stage of the vehicle."
                            orderFee:
                                type: "number"
                                description: "Optional. The order fee of the vehicle - if not included, use orderFee from vehicle subcollection. Only relevant for vehicle items"
                            vipOrderFee:
                                type: "number"
                                description: "The VIP order fee of the vehicle. Only relevant for ANTE_PREORDER vehicles"
                            vin:
                                type: "string"
                                description: "The vin of the vehicle that was purchased in this checkout cart"
                            odometerReading:
                                type: "number"
                                description: "The odometer reading of the vehicle that was purchased in this checkout cart"
                            estimatedDeliveryDate:
                                anyOf:
                                    - type: "number"
                                    - $ref: "#/components/schemas/CartDateConfig"
                                description: "The estimated delivery date of the vehicle that was purchased in this checkout cart. If it's an object, it's conditional delivery date based on selection at checkout"
                            estimatedProductionDate:
                                anyOf:
                                    - type: "number"
                                    - $ref: "#/components/schemas/CartDateConfig"
                                description: "The estimated production date of the vehicle that was purchased in this checkout cart. If it's an object, it's conditional production date based on selection at checkout"
                            shippingFee:
                                type: "number"
                                description: "Optional. The shipping fee of the vehicle - if not included, use shippingFee from vehicle subcollection. Only relevant for vehicle items"
                            pickUpFee:
                                type: "number"
                                description: "Optional. The pick up fee of the vehicle - if not included, default to 0. Only relevant for vehicle items"
                            preorderProdStart:
                                type: "string"
                                description: "a readable string of when production for preorders begin for this vehicle. Only used for preorder vehicles. Not a date since this can be a wide range!"
                            metadata:
                                type: "object"
                                properties:
                                    existingPayments:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                amount:
                                                    type: "number"
                                                type:
                                                    type: "string"
                                                    enum:
                                                        - "PREORDER"
                                                        - "EXISTINGORDER"
                                                recipient:
                                                    type: "string"
                                                    enum:
                                                        - "OEM"
                                                        - "EKHO"
                                                preorderId:
                                                    type: "string"
                                                paymentIntentId:
                                                    type: "string"
                                            required:
                                                - "amount"
                                                - "type"
                                                - "recipient"
                                            additionalProperties: false
                                        description: "Optional. Details previous payments made for the vehicle. \nExample: { existingPayments: [ { \tamount: 1000, \ttype: \"PREORDER\", \trecipient: \"OEM\", }, ], randomField: \"randomValue\", }"
                                description: "Optional. This is only relevant for vehicles currently. This object stores misc data that will be passed along to the checkoutCart object (and subsequent purchased vehicle object). Note that existingPayments will not be passed along but rather consumed."
                        required:
                            - "productId"
                            - "count"
                            - "name"
                            - "basePrice"
                            - "imgUrl"
                            - "specs"
                        additionalProperties: false
                    description: "An array of items that represent the vehicles and accessories in the cart"
                boltOnsAlreadyAssigned:
                    type: "boolean"
                    description: "Whether or not we need to assign bolt-ons to the vehicles in the cart. If true, all vehicles' boltOnAccessories arrays will be set and all accessories' boltOnVehicleIds arrays will be set. Default value (if not provided) is false"
                ecommUserId:
                    type: "string"
                    description: "Optional. The id of the user in the ecomm system"
                ecommOrderId:
                    type: "number"
                    description: "Optional. The id of the order in the ecomm system"
                ekhoCheckoutCartId:
                    type: "string"
                    description: "Optional. If you would like for us to overwrite an existing checkoutCart with the same id, provide the id here. If you don't provide this, we will create a new checkoutCart with a new id"
                orderCreationType:
                    type: "string"
                    enum:
                        - "ORGANIC"
                        - "PREORDER"
                        - "EXISTINGORDER"
                        - "OEMORIGINATED"
                        - "ABANDONEDCART"
                        - "ANTE_PREORDER"
                    description: 'Determines the type of order being created. If not provided, we will default to "ORGANIC". ANTE_PREORDER -> cart for a preorder, PREORDER -> cart created from a preorder, EXISTINGORDER -> cart created for an existing order, OEMORIGINATED -> cart created by OEM sales rep, ORGANIC -> cart created by buyer on OEM website'
                source:
                    type: "string"
                    description: 'The source of the checkout cart. Useful for tacking purposes to know where the OEM is placing this link - and thus where buyers are coming from. Example: "facebook"'
                linkUseType:
                    type: "string"
                    enum:
                        - "SINGLE_USE"
                        - "MULTI_USE"
                    description: 'The type of link that we''re creating. If not provided, we will default to "MULTI_USE". SINGLE_USE -> link can only be used once, MULTI_USE -> link can be used multiple times'
                customLinkConfig:
                    $ref: "#/components/schemas/CustomLinkConfig"
                preorderId:
                    type: "string"
                    description: "The id of the preorder. Only relevant for carts created from Ekho preorders"
                brandKey:
                    type: "string"
                    description: "The brand key of the branded vehicle(s) that exist in this checkout cart"
                reqManulDeliveryUpdates:
                    type: "boolean"
                    description: "true if all delivery updates for this vehicle should be manually set. Optional for backwards compatibility. Default is false. Overrides value on OEM vehicle object. Should only exist on vehicle items"
            required:
                - "cancelUrl"
                - "cartVehicle"
                - "oemKey"
                - "variantConfigIds"
                - "nativeDefaultCheckoutUrl"
                - "items"
            additionalProperties: false
        LegacyIncomingCheckoutCart:
            type: "object"
            properties:
                id:
                    type: "string"
                    description: "The id of the checkout cart. If an ID is included, then we will use this ID for the newly created checkout cart (and overwrite any existing cart with the same ID)"
                cancelUrl:
                    type: "string"
                    description: "The url to redirect to if the user cancels the checkout process"
                oemKey:
                    type: "string"
                    description: "The oemKey of the OEM that this checkout cart belongs to"
                oemId:
                    type: "string"
                    description: "The oemId of the OEM that this checkout cart belongs to (optional -- if not provided we will grab need to default to the main oemId)"
                nativeDefaultCheckoutUrl:
                    type: "string"
                    description: "The OEMs native checkout page URL, which we will route the buyer to if a) the buyer doesn't have vehicles in their cart, or b) we don't support the state they want to register their vehicle in (if included). \nExample: https://www.rideoem.com/checkout"
                registrationState:
                    type: "string"
                    enum:
                        - "AL"
                        - "AK"
                        - "AZ"
                        - "AR"
                        - "CA"
                        - "CO"
                        - "CT"
                        - "DE"
                        - "FL"
                        - "GA"
                        - "HI"
                        - "ID"
                        - "IL"
                        - "IN"
                        - "IA"
                        - "KS"
                        - "KY"
                        - "LA"
                        - "ME"
                        - "MD"
                        - "MA"
                        - "MI"
                        - "MN"
                        - "MS"
                        - "MO"
                        - "MT"
                        - "NE"
                        - "NV"
                        - "NH"
                        - "NJ"
                        - "NM"
                        - "NY"
                        - "NC"
                        - "ND"
                        - "OH"
                        - "OK"
                        - "OR"
                        - "PA"
                        - "RI"
                        - "SC"
                        - "SD"
                        - "TN"
                        - "TX"
                        - "UT"
                        - "VT"
                        - "VA"
                        - "WA"
                        - "WV"
                        - "WI"
                        - "WY"
                    description: "The state (abbreviation) the buyer wants to register their vehicle in. Helps us determine whether or not we can facilitate this sale"
                items:
                    type: "array"
                    items:
                        type: "object"
                        properties:
                            productId:
                                type: "string"
                                description: "The product id of the item"
                            count:
                                type: "number"
                                description: "The quantity of the item (only relevant if the item is an accessory)"
                            name:
                                type: "string"
                                description: "The name of the item"
                            basePrice:
                                type: "number"
                                description: "The base price of the item (i.e. total price, excluding specs and taxes and fees)"
                            imgUrl:
                                type: "string"
                                description: "The url of the image of the item. If we have our own (i.e. for a vehicle), we will provide our own."
                            specs:
                                type: "array"
                                items:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            description: "The name of the spec"
                                        price:
                                            type: "number"
                                            description: "The price of the spec"
                                        option:
                                            type: "string"
                                            description: "The option of the spec"
                                        description:
                                            type: "string"
                                            description: "The description of the spec. Allows for a longer string and shows up in a tooltip on the frontend"
                                        id:
                                            type: "string"
                                            description: "The id of the spec. Never used by Ekho, but could be useful for OEMs"
                                    required:
                                        - "name"
                                        - "price"
                                        - "option"
                                    additionalProperties: false
                                    description: "An array of objects that hold information about each spec of the item"
                                description: "An array of objects that hold information about each spec of the item"
                            estimatedProductionTime:
                                type: "number"
                                description: "The estimated production time (in days) of the vehicle, inclusive of production, shipping to US location, customs, PDI, etc. If specified, this will override the average production time of the vehicle from the Vehicle object"
                            estimatedDeliveryTime:
                                type: "number"
                                description: "The estimated delivery time (in days) of the vehicle from US location to end destination. If specified, this will override the average delivery time of the vehicle from the Vehicle object"
                            year:
                                type: "number"
                                description: "The year of the vehicle model. Only relevant for vehicle items. Will override the year that's in the vehicle subcollection object"
                            id:
                                type: "string"
                                description: "The id of the item. Will be used at order creation time as the document ID of the purchasedItem. Will only be set if the cart was created via the OEM portal"
                            color:
                                type: "string"
                                description: "The color of the vehicle"
                            totalPrice:
                                type: "number"
                                description: "The total price of the item (i.e. base price + specs). Only sometimes included when created from OEM admin portal"
                            boltOnAccessories:
                                type: "array"
                                items:
                                    type: "string"
                                description: "An array with the document IDs of boltOn purchasedAccessories that have been assigned to this vehicle. Will only be set if the cart was created via the OEM portal"
                            boltOnVehicleIds:
                                type: "array"
                                items:
                                    type: "string"
                                description: "An array with the document IDs of purchasedVehicles that this bolt-on has been assigned to. Will only be set if the cart was created via the OEM portal"
                            typeOfOrder:
                                type: "string"
                                enum:
                                    - "ante_preorder"
                                    - "preorder"
                                    - "buildToOrder"
                                    - "inventoryOrder"
                                description: "The type of order of the vehicle"
                            variantId:
                                type: "string"
                                description: "The variant id of the vehicle"
                            description:
                                type: "string"
                                description: "The description of the vehicle"
                            sku:
                                type: "string"
                                description: "Optional. The sku of the vehicle"
                            stage:
                                type: "string"
                                enum:
                                    - "signOff"
                                    - "pendingPaymentGuarantee"
                                    - "pendingVerification"
                                    - "production"
                                    - "complete"
                                description: "Optional. The stage of the vehicle."
                            orderFee:
                                type: "number"
                                description: "Optional. The order fee of the vehicle - if not included, use orderFee from vehicle subcollection. Only relevant for vehicle items"
                            vipOrderFee:
                                type: "number"
                                description: "The VIP order fee of the vehicle. Only relevant for ANTE_PREORDER vehicles"
                            vin:
                                type: "string"
                                description: "The vin of the vehicle that was purchased in this checkout cart"
                            odometerReading:
                                type: "number"
                                description: "The odometer reading of the vehicle that was purchased in this checkout cart"
                            estimatedDeliveryDate:
                                anyOf:
                                    - type: "number"
                                    - $ref: "#/components/schemas/CartDateConfig"
                                description: "The estimated delivery date of the vehicle that was purchased in this checkout cart. If it's an object, it's conditional delivery date based on selection at checkout"
                            estimatedProductionDate:
                                anyOf:
                                    - type: "number"
                                    - $ref: "#/components/schemas/CartDateConfig"
                                description: "The estimated production date of the vehicle that was purchased in this checkout cart. If it's an object, it's conditional production date based on selection at checkout"
                            shippingFee:
                                type: "number"
                                description: "Optional. The shipping fee of the vehicle - if not included, use shippingFee from vehicle subcollection. Only relevant for vehicle items"
                            pickUpFee:
                                type: "number"
                                description: "Optional. The pick up fee of the vehicle - if not included, default to 0. Only relevant for vehicle items"
                            preorderProdStart:
                                type: "string"
                                description: "a readable string of when production for preorders begin for this vehicle. Only used for preorder vehicles. Not a date since this can be a wide range!"
                            metadata:
                                type: "object"
                                properties:
                                    existingPayments:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                amount:
                                                    type: "number"
                                                type:
                                                    type: "string"
                                                    enum:
                                                        - "PREORDER"
                                                        - "EXISTINGORDER"
                                                recipient:
                                                    type: "string"
                                                    enum:
                                                        - "OEM"
                                                        - "EKHO"
                                                preorderId:
                                                    type: "string"
                                                paymentIntentId:
                                                    type: "string"
                                            required:
                                                - "amount"
                                                - "type"
                                                - "recipient"
                                            additionalProperties: false
                                        description: "Optional. Details previous payments made for the vehicle. \nExample: { existingPayments: [ { \tamount: 1000, \ttype: \"PREORDER\", \trecipient: \"OEM\", }, ], randomField: \"randomValue\", }"
                                description: "Optional. This is only relevant for vehicles currently. This object stores misc data that will be passed along to the checkoutCart object (and subsequent purchased vehicle object). Note that existingPayments will not be passed along but rather consumed."
                        required:
                            - "productId"
                            - "count"
                            - "name"
                            - "basePrice"
                            - "imgUrl"
                            - "specs"
                        additionalProperties: false
                    description: "An array of items that represent the vehicles and accessories in the cart"
                boltOnsAlreadyAssigned:
                    type: "boolean"
                    description: "Whether or not we need to assign bolt-ons to the vehicles in the cart. If true, all vehicles' boltOnAccessories arrays will be set and all accessories' boltOnVehicleIds arrays will be set. Default value (if not provided) is false"
                ecommUserId:
                    type: "string"
                    description: "Optional. The id of the user in the ecomm system"
                ecommOrderId:
                    type: "number"
                    description: "Optional. The id of the order in the ecomm system"
                ekhoCheckoutCartId:
                    type: "string"
                    description: "Optional. If you would like for us to overwrite an existing checkoutCart with the same id, provide the id here. If you don't provide this, we will create a new checkoutCart with a new id"
                orderCreationType:
                    type: "string"
                    enum:
                        - "ORGANIC"
                        - "PREORDER"
                        - "EXISTINGORDER"
                        - "OEMORIGINATED"
                        - "ABANDONEDCART"
                        - "ANTE_PREORDER"
                    description: 'Determines the type of order being created. If not provided, we will default to "ORGANIC". ANTE_PREORDER -> cart for a preorder, PREORDER -> cart created from a preorder, EXISTINGORDER -> cart created for an existing order, OEMORIGINATED -> cart created by OEM sales rep, ORGANIC -> cart created by buyer on OEM website'
                source:
                    type: "string"
                    description: "The source of the checkout cart. Useful for tacking purposes to know where the OEM is placing this link - and thus where buyers are coming from. \nExample: \"facebook\""
                linkUseType:
                    type: "string"
                    enum:
                        - "SINGLE_USE"
                        - "MULTI_USE"
                    description: 'The type of link that we''re creating. If not provided, we will default to "MULTI_USE". SINGLE_USE -> link can only be used once, MULTI_USE -> link can be used multiple times'
                customLinkConfig:
                    $ref: "#/components/schemas/CustomLinkConfig"
                preorderId:
                    type: "string"
                    description: "The id of the preorder. Only relevant for carts created from Ekho preorders"
                brandKey:
                    type: "string"
                    description: "The brand key of the branded vehicle(s) that exist in this checkout cart"
                reqManulDeliveryUpdates:
                    type: "boolean"
                    description: "true if all delivery updates for this vehicle should be manually set. Optional for backwards compatibility. Default is false. Overrides value on OEM vehicle object. Should only exist on vehicle items"
            required:
                - "cancelUrl"
                - "oemKey"
                - "nativeDefaultCheckoutUrl"
                - "items"
            additionalProperties: false
        # Not it's own object, but used in incomingCarts and CheckoutCarts objects
        CustomLinkConfig:
            type: object
            description: Custom configuration for this checkout cart
            required:
                - linkName
                # Optional
                # - salespersonEmail
                # - prefilledInfo
                # - checkoutPaymentOverride
            properties:
                linkName:
                    type: string
                    description: The human readable name of the custom link
                checkoutPaymentOverride:
                    type: object
                    description: The checkout payment options override that applies for this custom link. If this object exists, then checkout will use this (rather than object on OEM object) to determine checkout payment options. Note that if the OEM is not configured to support certain payment types (like reservation payment), then you can not create a custom link that supports that payment type. You can only create a custom link that supports a subset of payments types that the OEM supports
                    properties:
                        STANDARD_RESERVATION:
                            type: object
                            description: If we're allowing a reservation payment at checkout. If this exists and isn't null, the OEM supports this payment type. The other properties inform how we handle this payment type
                            required:
                                - paymentTypeEnum
                            properties:
                                paymentTypeEnum:
                                    type: string
                                    enum: [STANDARD_RESERVATION]
                        CHECKOUT_FULL_PAYMENT:
                            type: object
                            description: If we're allowing full payment at chekcout. If this exists and isn't null, the OEM supports this payment type. The other properties inform how we handle this payment type
                            required:
                                - paymentTypeEnum
                                - fullPaymentDiscountPerc
                            properties:
                                paymentTypeEnum:
                                    type: string
                                    enum: [CHECKOUT_FULL_PAYMENT]
                                fullPaymentDiscountPerc:
                                    type: number
                                    description: The percentage discount we give the buyer if they pay in full
                        LOAN_DOWNPAYMENT:
                            type: object
                            description: If we're allowing a loan down payment at checkout. If this exists and isn't null, the OEM supports this payment type. The other properties inform how we handle this payment type
                            required:
                                - paymentTypeEnum
                                - checkoutDownPaymentPerc
                            properties:
                                paymentTypeEnum:
                                    type: string
                                    enum: [LOAN_DOWNPAYMENT]
                                checkoutDownPaymentPerc:
                                    type: number
                                    description: The percentage of the total order price that we require the buyer to pay at checkout
                salespersonEmail:
                    type: string
                    description: The email of the salesperson that created the custom link. Will be used for updates
                prefilledInfo:
                    type: object
                    description: An object that holds information that we will prefill at checkout. All are optional
                    properties:
                        buyerFullName:
                            type: string
                        buyerPhone:
                            type: string
                        buyerEmail:
                            type: string
                        selectedPaymentOption:
                            type: string
                            enum:
                                - STANDARD_RESERVATION
                                - CHECKOUT_FULL_PAYMENT
                                - LOAN_DOWNPAYMENT
                        selectedDeliveryOption:
                            type: string
                            enum:
                                - PICK_UP
                                - SHIP
                        selectedRegistrationOption:
                            type: string
                            enum:
                                - EKHO
                                - BUYER
                        selectedPickUpLocationId:
                            type: string
                            description: the Ekho document ID of the pickUpLocation that the buyer wants to pick up their vehicle from. Optional value
                        shippingAddress:
                            type: object
                            description: The shipping address of the buyer. Only relevant if selectedDeliveryOption is "SHIP"
                            properties:
                                addressString:
                                    type: string
                                addressLineOne:
                                    type: string
                                addressLineTwo:
                                    type: string
                                city:
                                    type: string
                                county:
                                    type: string
                                state:
                                    type: string
                                zip:
                                    type: string
                        registrationAddress:
                            type: object
                            description: The registration address of the buyer. Only relevant if selectedRegistrationOption is "EKHO"
                            properties:
                                addressString:
                                    type: string
                                addressLineOne:
                                    type: string
                                addressLineTwo:
                                    type: string
                                city:
                                    type: string
                                county:
                                    type: string
                                state:
                                    type: string
                                zip:
                                    type: string
                        mailingAddress:
                            type: object
                            description: The mailing address of the buyer. Only relevant if selectedRegistrationOption is "EKHO"
                            properties:
                                addressString:
                                    type: string
                                addressLineOne:
                                    type: string
                                addressLineTwo:
                                    type: string
                                city:
                                    type: string
                                county:
                                    type: string
                                state:
                                    type: string
                                zip:
                                    type: string
                        regAddressSameAsShipping:
                            type: boolean
                            description: Whether or not the registration address is the same as the shipping address. Only relevant if selectedDeliveryOption is "DELIVERY"
                        mailingAddressSameAsShipping:
                            type: boolean
                            description: Whether or not the mailing address is the same as the shipping address. Only relevant if selectedRegisrationOption is "BUYER"
        Buyer:
            type: "object"
            properties:
                id:
                    type: "string"
                fullName:
                    type: "string"
                address:
                    type: "object"
                    properties:
                        addressLineOne:
                            type: "string"
                        addressLineTwo:
                            type: "string"
                        city:
                            type: "string"
                        county:
                            type: "string"
                        state:
                            type: "string"
                        zip:
                            type: "string"
                    required:
                        - "addressLineOne"
                        - "addressLineTwo"
                        - "city"
                        - "county"
                        - "state"
                        - "zip"
                    additionalProperties: false
                email:
                    type: "string"
                phone:
                    type: "string"
                oemId:
                    type: "string"
                createdAt:
                    type: "number"
                lastActive:
                    type: "number"
            required:
                - "id"
                - "fullName"
                - "address"
                - "email"
                - "phone"
                - "oemId"
                - "createdAt"
            additionalProperties: false

        PickUpLocation:
            type: "object"
            properties:
                id:
                    type: "string"
                name:
                    type: "string"
                addressLineOne:
                    type: "string"
                addressLineTwo:
                    type: "string"
                city:
                    type: "string"
                state:
                    type: "string"
                zip:
                    type: "string"
                lat:
                    type: "number"
                    description: "The latitude of the location"
                lng:
                    type: "number"
                    description: "The longitude of the location"
                type:
                    type: "string"
                    enum:
                        - "DEALER"
                        - "OEM"
                        - "EKHO"
                numberForSupport:
                    type: "string"
                    description: "The phone number for support at this location"
                emailForSupport:
                    type: "string"
                    description: "The email for support at this location"
            required:
                - "id"
                - "name"
                - "addressLineOne"
                - "addressLineTwo"
                - "city"
                - "state"
                - "zip"
                - "lat"
                - "lng"
                - "type"
            additionalProperties: false
        ExternalPurchasedVehicle:
            type: "object"
            properties:
                id:
                    type: "string"
                    description: "Unique identifier for the purchased vehicle"
                productId:
                    type: "string"
                    description: "The product id associated with this vehicle"
                vehicleType:
                    type: "string"
                    enum:
                        - "Passenger"
                        - "Motorcycle"
                        - "Truck"
                        - "Commercial"
                        - "Trailer"
                        - "Moped"
                        - "OHV"
                        - "Vessel"
                    description: "The government vehicle type (aligns with our INTERNAL_VEHICLE_TYPE_ENUM)"
                buyerId:
                    type: "string"
                    description: "The id of the buyer"
                buyerFullName:
                    type: "string"
                    description: "The full name of the buyer (copied from the buyer object). DO NOT use this for T&R, instead use the names stored in registrationDetails"
                lastActive:
                    type: "number"
                    description: "The last time the buyer viewed the purchased vehicle's details page. Used for nudging."
                placedOrderId:
                    type: "string"
                    description: "The order id placed for this vehicle"
                orderFee:
                    type: "number"
                    description: "How much a buyer pays at checkout towards a vehicle. In case of full vehicle payment, this is the total price of the vehicle (without any taxes or fees included and minus any previous payments - like preorder fees). In case of financing, this is the standard down payment (not inclusive of preorder fees). In case of standard reservation, this is the reservation fee."
                name:
                    type: "string"
                    description: "The name of the vehicle"
                basePrice:
                    type: "number"
                    description: "The base price of the vehicle"
                basePriceWithSpecs:
                    type: "number"
                    description: "The base price of the vehicle including the price of any specs"
                specs:
                    type: "array"
                    items:
                        type: "object"
                        properties:
                            name:
                                type: "string"
                                description: "The name of the spec"
                            price:
                                type: "number"
                                description: "The price of the spec"
                            option:
                                type: "string"
                                description: "The option chosen for the spec"
                            description:
                                type: "string"
                                description: "The description of the spec. Allows for a longer string and shows up in a tooltip on the frontend"
                            id:
                                type: "string"
                                description: "The id of the spec. Never used by Ekho, but could be useful for OEMs"
                        required:
                            - "name"
                            - "price"
                            - "option"
                        additionalProperties: false
                    description: "Array of specs for the vehicle. Each spec includes name, price, option. Description and id are optional."
                imgUrl:
                    type: "string"
                description:
                    type: "string"
                oemId:
                    type: "string"
                typeOfOrder:
                    type: "string"
                    enum:
                        - "preorder"
                        - "buildToOrder"
                        - "inventoryOrder"
                dotVehicle:
                    type: "boolean"
                    description: "Indicates if the vehicle is DOT compliant"
                datePurchased:
                    type: "number"
                    description: "The date the reservation fee was paid for this vehicle (ms since epoch)"
                stage:
                    type: "string"
                    enum:
                        - "signOff"
                        - "pendingPaymentGuarantee"
                        - "pendingVerification"
                        - "production"
                        - "complete"
                    description: "What is the status of the order from a production standpoint?"
                vehicleFulfillmentStatus:
                    type: "string"
                    enum:
                        - "FULFILLED"
                        - "UNFULFILLED"
                        - "FULFILLMENT_REQUESTED"
                        - "CANCELED"
                        - "ON_HOLD"
                        - "SHIPPED"
                        - "READY_FOR_PICK_UP"
                    description: "A reflection of where the order is located in the fulfillment process"
                fulfillmentDetails:
                    type: "object"
                    properties:
                        vehicleTrackingReference:
                            type: "string"
                            description: "Tracking number or link."
                        contactNumber:
                            type: "string"
                            description: "A number the buyer can call."
                        companyName:
                            type: "string"
                            description: "Name of the fulfillment company - presumably a delivery vendor."
                        msoTrackingReference:
                            type: "string"
                            description: "Tracking number or link for MSO."
                        msoSent:
                            type: "boolean"
                            description: "Init as false. Indicates whether the OEM has sent us the MSO."
                    additionalProperties: false
                    description: "The following optional properties are provided by the OEM at time of setting vehicleFulfillmentStatus to SHIPPED."
                grossInvoicePrice:
                    type: "number"
                    description: "The gross invoice price of the vehicle paid by Ekho to the client"
                sensitiveDataPurged:
                    type: "boolean"
                    description: "Indicates whether sensitive data has been purged from this vehicle. Init as false."
                variantId:
                    type: "string"
                    description: "The variant id of the vehicle"
                sku:
                    type: "string"
                    description: "The SKU of the vehicle"
                boltOnAccessories:
                    type: "array"
                    items:
                        type: "string"
                    description: "An array with the document IDs of boltOn purchasedAccessories that have been assigned to this vehicle"
                totalPrice:
                    type: "number"
                    description: "The price of the vehicle plus the price of each bolt on accessory minus any discounts! Does not include taxes or fees."
                preDiscountTotalPrice:
                    type: "number"
                    description: "The price of the vehicle plus the price of each bolt on accessory before any discounts are subtracted! Does not include taxes or fees."
                orderCreationType:
                    type: "string"
                    enum:
                        - "ORGANIC"
                        - "PREORDER"
                        - "EXISTINGORDER"
                        - "OEMORIGINATED"
                        - "ABANDONEDCART"
                    description: 'Determines the type of order this vehicle belongs to. Defaults to "ORGANIC".'
                externalStatus:
                    type: "string"
                    enum:
                        - "UNCATEGORIZED"
                        - "CANCELED"
                        - "ON_HOLD"
                        - "PENDING"
                        - "AWAITING_OEM_ACTION"
                        - "AWAITING_BUYER_OR_EKHO_ACTION"
                        - "KICK_OFF_FULFILLMENT"
                        - "FULFILLMENT_IN_PROGRESS"
                        - "FULFILLED"
                    description: 'The mutually exclusive external (OEM-facing) status that an "order" (purchasedVehicle object) can be in. Used in the OEM Admin Portal to filter orders.'
                estimatedProductionDate:
                    type: "number"
                    description: "The estimated date of when this vehicle will be finished being produced in ms since epoch. Default initial value to purchasedDate + Vehicle.averageProductionTime"
                estimatedDeliveryDate:
                    type: "number"
                    description: "The estimated date of when this vehicle will be delivered (to the buyer or to the pick up location) in ms since epoch. Default initial value will be purchasedDate + Vehicle.totalLeadTime"
                year:
                    type: "number"
                    description: "The year of the vehicle model. This is only optional because of backwards compatibility. Gets injected at order creation time."
                pickUpInfo:
                    type: "object"
                    properties:
                        pickUpLocationId:
                            type: "string"
                        pickUpLocationName:
                            type: "string"
                        addressLineOne:
                            type: "string"
                        addressLineTwo:
                            type: "string"
                        county:
                            type: "string"
                        city:
                            type: "string"
                        state:
                            type: "string"
                        zip:
                            type: "string"
                    required:
                        - "pickUpLocationId"
                        - "pickUpLocationName"
                        - "addressLineOne"
                        - "addressLineTwo"
                        - "county"
                        - "city"
                        - "state"
                        - "zip"
                    additionalProperties: false
                    description: "At time of check out, if this field is set, it means the buyer has opted for pick up."
                deliveryInfo:
                    type: "object"
                    properties:
                        addressLineOne:
                            type: "string"
                        addressLineTwo:
                            type: "string"
                        county:
                            type: "string"
                        city:
                            type: "string"
                        state:
                            type: "string"
                        zip:
                            type: "string"
                        deliveryInstructions:
                            type: "string"
                        poc:
                            type: "string"
                        pocName:
                            type: "string"
                        pocNumber:
                            type: "number"
                    required:
                        - "addressLineOne"
                        - "addressLineTwo"
                        - "county"
                        - "city"
                        - "state"
                        - "zip"
                    additionalProperties: false
                    description: "At time of check out, if this field is set, it means the buyer has opted for delivery."
                registrationDetails:
                    type: "object"
                    properties:
                        tarProcess:
                            type: "string"
                            enum:
                                - "AUTOMATED"
                                - "ASSISTED"
                                - "AUTOMATED_TITLING"
                                - "ASSISTED_TITLING"
                                - "NONE"
                            description: "The process that the buyer has chosen for titling and registration."
                        registrationState:
                            type: "string"
                            description: "Two letter state abbreviation for registration state"
                        birthYear:
                            type: "number"
                            description: "Optional. The birth year of the buyer in UNIX timestamp."
                    required:
                        - "tarAgent"
                        - "registrationAddress"
                        - "standardizedRegistrationAddress"
                        - "standardizedCounty"
                        - "registrationState"
                    description: "Registration details object"
                additionalDues:
                    type: "object"
                    properties:
                        fidelity:
                            type: "string"
                            enum:
                                - "initial"
                                - "apiEstimate"
                                - "final"
                            description: "the fidelity of the estimates for taxes and fees."
                        total:
                            type: "number"
                            description: "sum of fee estimates, tax estimates, and delivery estimates (if applicable) does not include wiggleroom!"
                        taxTotal:
                            type: "number"
                            description: "sum of tax estimates"
                        feeTotal:
                            type: "number"
                            description: "sum of fee estimates"
                        deliveryEstimate:
                            type: "number"
                            description: "the estimated delivery cost of the vehicle. Should be 0 if picking up."
                        pickUpEstimate:
                            type: "number"
                            description: "the estimated pickup cost of the vehicle. Should be 0 if vehicle is being delivered."
                        taxEstimates:
                            type: "array"
                            items:
                                type: "object"
                                properties:
                                    feeType:
                                        type: "string"
                                    name:
                                        type: "string"
                                    value:
                                        type: "number"
                                required:
                                    - "feeType"
                                    - "name"
                                    - "value"
                                additionalProperties: false
                            description: "array of tax estimates"
                        feeEstimates:
                            type: "array"
                            items:
                                type: "object"
                                properties:
                                    feeType:
                                        type: "string"
                                    name:
                                        type: "string"
                                    value:
                                        type: "number"
                                required:
                                    - "feeType"
                                    - "name"
                                    - "value"
                                additionalProperties: false
                            description: "array of fee estimates"
                    required:
                        - "fidelity"
                        - "total"
                        - "taxTotal"
                        - "feeTotal"
                        - "deliveryEstimate"
                        - "pickUpEstimate"
                        - "taxEstimates"
                        - "feeEstimates"
                    additionalProperties: false
                    description: "this object is deprecated and should only be present on old vehicles. New additional dues live in their own array"
                vin:
                    type: "string"
                    description: "VIN must be input by the OEM at some point prior to delivery"
                odometerReading:
                    type: "number"
                    description: "Must be input by the OEM at some point prior to delivery, or can be auto set"
                odometerValidity:
                    type: "string"
                    enum:
                        - "Actual"
                        - "ExceedsMechanicalLimits"
                        - "NotActual"
                    description: "Indicates the odometer validity/condition. Can be autoset"
                motorcycleEngineNumber:
                    type: "string"
                    description: "Must be input by the OEM if the OEM is selling motorcycles"
                checkoutCartId:
                    type: "string"
                    description: "The id of the cart that was used to check out this vehicle. Optional"
                lastUpdated:
                    type: "number"
                    description: "date for when the vehicle has been last updated"
                lastNudged:
                    type: "number"
                    description: "the last date when the OEM has nudged the buyer (also updated when we send emails for VIN and odometer assigned)"
                vehicleInvoiceURL:
                    type: "string"
                    description: "URL to the vehicle invoice"
                metadata:
                    type: "object"
                    description: "An optional object that holds additional information about the vehicle. \nExample: { randomField: \"randomValue\" }"
                surveyData:
                    type: "object"
                    additionalProperties:
                        type: "object"
                        properties:
                            question:
                                type: "string"
                                description: "The question being asked"
                            answer:
                                oneOf:
                                    - type: "string"
                                    - type: "number"
                                    - type: "boolean"
                        required:
                            - "question"
                            - "answer"
                        additionalProperties: false
                    description: "answers to a Ekho-hosted survey surfaced in buyer portal"
                requiresAssemblyAfterDelivery:
                    type: "boolean"
                    description: "true if the vehicle requires assembly after delivery (optional for backwards compatibility)"
                paymentSelection:
                    type: "string"
                    enum:
                        - "nativeFinancing"
                        - "otherFinancing"
                        - "checkoutFullPayment"
                        - "cashEarly"
                        - "cash"
                    description: "Payment selection the buyer has chosen. Initially set during checkout and can be changed in financing. Init as null."
                vehiclePaymentStatus:
                    type: "string"
                    enum:
                        - "RESERVATION_INITIATIED"
                        - "NO_PAYMENTS"
                        - "RESERVATION_PAID"
                        - "DOWNPAYMENT_PAID"
                        - "FINANCING_GUARANTEED"
                        - "FULLY_PAID"
                    description: "The status of payment for this particular purchasedVehicle. Init as null."
                totalAmountReceived:
                    type: "number"
                    description: "Running total of all money received by Ekho for this vehicle (post refunds). Not all money accounted here will necessarily be collected by Ekho. Initialized at 0."
            required:
                - "id"
                - "productId"
                - "buyerId"
                - "buyerFullName"
                - "placedOrderId"
                - "orderFee"
                - "name"
                - "basePrice"
                - "basePriceWithSpecs"
                - "specs"
                - "imgUrl"
                - "description"
                - "oemId"
                - "typeOfOrder"
                - "dotVehicle"
                - "datePurchased"
                - "numPrevVehiclesTowardTiers"
                - "stage"
                - "vehicleFulfillmentStatus"
                - "paymentInfo"
                - "sensitiveDataPurged"
                - "variantId"
                - "sku"
                - "boltOnAccessories"
                - "totalPrice"
                - "preDiscountTotalPrice"
                - "orderCreationType"
                - "externalStatus"
                - "estimatedProductionDate"
                - "estimatedDeliveryDate"
                - "relocations"
                - "modals"
            additionalProperties: false
            description: "PurchasedVehicle interface Represents a purchased vehicle along with its associated data and metadata."
        PaymentObject:
            type: "object"
            properties:
                id:
                    type: "string"
                    description: "The id of the payment. If brex, the id is the brex transaction id. If stripe, the id is the payment intent id."
                baseAmount:
                    type: "number"
                    description: "The base amount of the payment, in dollars and cents. This does not include any additional processing fees potentially added to the amount."
                amountReceived:
                    type: "number"
                    description: "The amount of the payment that was received, in dollars and cents. This includes any additional processing fees potentially added."
                processingFeeInc:
                    type: "boolean"
                    description: "Init as false. Indicates whether the 3% processing fee has been added to the associated payment."
                paymentType:
                    type: "string"
                    enum:
                        - "STANDARD_RESERVATION"
                        - "LOAN_DOWNPAYMENT"
                        - "CHECKOUT_FULL_PAYMENT"
                        - "EARLY_REMAINING_BALANCE"
                        - "LATE_REMAINING_BALANCE"
                        - "KLARNA_CHECKOUT_FULL_PAYMENT"
                        - "LOAN_ADDITIONAL_DOWN"
                        - "PRECHECKOUT"
                        - "PREORDER_RESERVATION"
                        - "PREORDER_VIP_RESERVATION"
                status:
                    type: "string"
                    enum:
                        - "processing"
                        - "succeeded"
                        - "requires_payment_method"
                        - "requires_action"
                        - "canceled"
                        - "requires_confirmation"
                        - "requires_capture"
                platform:
                    type: "string"
                    enum:
                        - "brex"
                        - "stripe"
                recipient:
                    type: "string"
                    enum:
                        - "OEM"
                        - "EKHO"
                receiptId:
                    type: "string"
                    description: "ID of the associated payment receipt object. Optional field set after one exists."
                paymentIntentClientSecret:
                    type: "string"
                    description: "The client secret of the payment intent. Optional field set if platform is stripe."
            required:
                - "id"
                - "baseAmount"
                - "amountReceived"
                - "processingFeeInc"
                - "paymentType"
                - "status"
                - "platform"
                - "recipient"
            additionalProperties: false
            description: "Represents a payment made towards a vehicle."
        DiscountCategory:
            type: "string"
            enum:
                - "DISCOUNT_CAMPAIGN"
                - "CUSTOM_DISCOUNT"
                - "REENGAGEMENT_DISCOUNT"
                - "FULL_PAYMENT_DISCOUNT"
        ExternalPurchasedAccessory:
            type: "object"
            properties:
                id:
                    type: "string"
                productId:
                    type: "string"
                name:
                    type: "string"
                basePrice:
                    type: "number"
                totalPrice:
                    type: "number"
                    description: "basePrice + cost of all specs. Cost of a single accessory, not multipled by count"
                preDiscountTotalPrice:
                    type: "number"
                    description: "The total price of the accessory before any discounts are applied"
                specs:
                    type: "array"
                    items:
                        type: "object"
                        properties:
                            name:
                                type: "string"
                            price:
                                type: "number"
                            option:
                                type: "string"
                                description: 'Example: "black"'
                            description:
                                type: "string"
                                description: "The description of the spec. Allows for a longer string and shows up in a tooltip on the frontend"
                            id:
                                type: "string"
                                description: "The id of the spec. Never used by Ekho, but could be useful for OEMs"
                        required:
                            - "name"
                            - "price"
                            - "option"
                        additionalProperties: false
                imgUrl:
                    type: "string"
                    description: "The URL of the image of the accessory"
                description:
                    type: "string"
                oemId:
                    type: "string"
                placedOrderId:
                    type: "string"
                buyerId:
                    type: "string"
                datePurchased:
                    type: "number"
                    description: "The date the reservation fee was paid for this accessory"
                count:
                    type: "number"
                    description: "The number of this accessory that was purchased"
                variantId:
                    type: "string"
                sku:
                    type: "string"
                boltOnVehicleIds:
                    type: "array"
                    items:
                        type: "string"
                    description: "If this field exists, then accessory is bolt on. The array contains the assigned vehicle for each accessory. If vehicle isn''t assigned, array values(s) is empty string as default value. \nExample: [\"\",\"\"]"
            required:
                - "id"
                - "productId"
                - "name"
                - "basePrice"
                - "totalPrice"
                - "preDiscountTotalPrice"
                - "specs"
                - "imgUrl"
                - "description"
                - "oemId"
                - "placedOrderId"
                - "buyerId"
                - "datePurchased"
                - "count"
                - "variantId"
                - "sku"
            additionalProperties: false

        ExternalPreorder:
            type: "object"
            properties:
                id:
                    type: "string"
                datePurchased:
                    type: "number"
                    description: "The date the reservation fee was paid for this preorder"
                buyerId:
                    type: "string"
                buyerFullName:
                    type: "string"
                    description: "The full name of the buyer (copied from the buyer object at time of preorder creation)."
                oemId:
                    type: "string"
                checkoutCartId:
                    type: "string"
                    description: "The id of the checkout cart that this preorder was created from"
                orderFee:
                    type: "number"
                    description: "How much the buyer paid at preorder checkout towards the vehicle"
                variantId:
                    type: "string"
                productId:
                    type: "string"
                name:
                    type: "string"
                    description: "The name of the base model"
                specs:
                    type: "array"
                    items:
                        type: "object"
                        properties:
                            name:
                                type: "string"
                            price:
                                type: "number"
                            option:
                                type: "string"
                        required:
                            - "name"
                            - "price"
                            - "option"
                        additionalProperties: false
                externalStatus:
                    type: "string"
                    enum:
                        - "PENDING_INVITATION"
                        - "AWAITING_CONVERSION"
                        - "CANCELED"
                    description: "The mutually exclusive external (OEM-facing) status that a preorder can be in. Used in the OEM Admin Portal to filter preorders."
                vehicle:
                    type: "array"
                    items:
                        type: "object"
                        additionalProperties: false
                orderSessionId:
                    type: "string"
                    description: "The id of the checkout session that this preorder was created from. Helpful for tying together a single payment intent across multiple preorders."
                ecommOrderId:
                    type: "number"
                    description: "(optional) The id of the order we created in their e-comm system. We use this to update the order at later points. Init as null."
                sku:
                    type: "string"
                    description: "(optional) The custom sku of the order we create in their e-comm system."
                status:
                    type: "string"
                    enum:
                        - "CANCELED"
                        - "AWAITING_CONVERSION"
                        - "CONVERTED"
                    description: "The status of the preorder. Initialized as null, but set to AWAITING_CONVERSION when the preorder payment is successfully processed."
                paymentInfo:
                    $ref: "#/components/schemas/PaymentObject"
                accessories:
                    type: "array"
                    items:
                        type: "object"
                        properties:
                            productId:
                                type: "string"
                            name:
                                type: "string"
                            basePrice:
                                type: "number"
                            specs:
                                type: "array"
                                items:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        price:
                                            type: "number"
                                        option:
                                            type: "string"
                                    required:
                                        - "name"
                                        - "price"
                                        - "option"
                                    additionalProperties: false
                            imgUrl:
                                type: "string"
                            description:
                                type: "string"
                            count:
                                type: "number"
                            variantId:
                                type: "string"
                        required:
                            - "productId"
                            - "name"
                            - "basePrice"
                            - "specs"
                            - "imgUrl"
                            - "description"
                            - "count"
                            - "variantId"
                        additionalProperties: false
                convertedCheckoutCartId:
                    type: "string"
                    description: "The id of the checkout cart that this preorder was converted into."
            required:
                - "id"
                - "datePurchased"
                - "buyerId"
                - "buyerFullName"
                - "oemId"
                - "checkoutCartId"
                - "orderFee"
                - "variantId"
                - "productId"
                - "name"
                - "specs"
                - "externalStatus"
                - "vehicle"
                - "orderSessionId"
                - "status"
                - "paymentInfo"
            additionalProperties: false
        CartDateConfig:
            type: object
            description: stores variable vehicle delivery dates or production dates (depending on use) based on checkout payment selection. Can expand to other options in the future. Keys are either 'cash', 'nativeFinancing', 'checkoutFullPayment'.
            additionalProperties:
                type: number
                description: the UNIX timestamp of the delivery date
    securitySchemes:
        oemAdminAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
